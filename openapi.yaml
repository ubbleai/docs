openapi: 3.0.3

info:
  title: Checkout.com - Identity Verification
  x-logo:
    url: "https://raw.githubusercontent.com/ubbleai/docs/main/cko_doc_logo.png"
  description: |
    # Introduction
    [Checkout.com](https://www.checkout.com/)'s Identity Verification solution enables you to verify your users' identities
    to meet compliance requirements and reduce the risk of fraud.
    
    To integrate Identity Verification and configure your account, reach out to your Account Manager or support.idv@checkout.com.

    The following represents a typical identity verification flow:

     <img src="https://raw.githubusercontent.com/ubbleai/docs/main/intro_diagram.png" alt="intro_diagram" width="800" height="auto">

    1. **You request an identity verification.** You'll receive a unique URL that you need to redirect the user to.
    2. **You redirect the user.** You have full control over how to [manage the verification redirection](#section/Manage-verification-redirection) to ensure a smooth user experience.
    The user performs verification on their mobile device. They'll use their device camera to scan their face and documents. 
    3. **You'll receive the [verification results](#section/Handle-verification-results) via a [webhook](#section/Webhooks).** You can also
    request more detailed results via the [API](#tag/Identity-verifications/operation/retrieve_identity_verification),
    or download a [PDF report](#tag/Identity-verifications/operation/pdf_identity_verification).
    4. **You decide on follow-up actions based on the verification results.** You can also reattempt the identity verification if required.

    You can also use our dedicated [dashboard](https://dashboard.ubble.ai/) to:
    - view and manage your identity verification activity
    - see detailed information on identification data

    # Get Started
    Use the Identity Verification API and sandbox environment to test the identity verification process.

    ## Request an identity verification and perform a test verification
    1. You request an identity verification.
    2. You receive a link which you can use to perform a test verification.
    3. You receive a webhook notification once the results of the verification are ready.
    4. You use the detailed results to make a decision on a follow-up action.

    ## Before you begin
    - Make sure you have a [test account](https://dashboard.ubble.ai/) and credentials. Open the [dashboard](https://dashboard.ubble.ai/)
    and navigate to the "API credentials" tab to create your credentials and your certificate. If you need an account, please contact support.idv@checkout.com.
    - We use mutual Transport Layer Security. You must then authenticate your calls by including your mTLS certificate in API calls.
    - To receive notifications for the various identity verification events triggered throughout the steps, you will need to define a
    webhook url. For security reasons all our webhook calls are signed, can be whitelisted or can even request an authentication.
    You will find all details about webhook implementation in the [webhook section](#section/Webhooks).
    - You'll also need to provide a redirect URL. The user will be redirected to this URL once verification is completed.

    ## Step 1: Request an identity verification
    To request an identity verification, you must include the following fields:
    - `name` - the full name provided by the user
    - `webhook_url` - the URL to get notifications
    - `redirect_url` - the URL to redirect the user to once verification is completed

    ### Request example

    ```json
    {
      "declared_data": {
        "name": "David Vincent"
      },
      "webhook_url": "https://my.api/events/",
      "redirect_url": "https://myweb.site?query-param=hello"
    }
    ```

    ### Response example

    ```json
    {
      "id": "idv_tkoi5db4hryu5cei5vwoabr7we",
      "created_on": "2017-07-21T17:32:28Z",
      "modified_on": "2017-07-21T17:40:32Z",
      "user_journey_id": "usj_tkoi5db4hryu5cei5vwoabr7we",
      "applicant_id": "aplt_tkoi5db4hryu5cei5vwoabr7we",
      "status": "pending",
      "response_codes": [],
      "declared_data": {
        "name": "David Vincent",
        "birth_date": "1934-10-02"
      },
      "documents": [],
      "webhook_url": "https://my.api/events/",
      "redirect_url": "https://myweb.site?query-param=hello",
      "_links": {
        "self": {
          "href": "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
        },
        "applicant": {
          "href": "https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we"
        },
        "verification_url": {
          "href": "https://id.ubble.ai/4hryu5cei5/"
        }
      }
    }
    ```

    Make a note of the identity verification `id` value in the response. You'll need it to retrieve the detailed verification results later.

    For more details, see our the [request an identity verification endpoint](#tag/Identity-verifications).

    ## Step 2: Perform a test verification

    The identity verification response contains a `_links.verification_url.href` field. You should send the user to this URL to redirect them to the Identity Verification web application.

    To test this step, open the URL on your browser and follow the instructions displayed.
  
    ## Step 3: Verify webhook notifications

    If you've configured your webhook receiver, you'll be notified of events that occur during the identity verification flow via webhooks. Among other information, the webhooks will contain:
    - the event `type` - for example, `identity_verification_capture_completed` or `identity_verification_retry_requested`
    - the identity verification `status` - for example, `capture_in_progress`, `approved`, or `declined`

    ### Webhook example

    ```json
    {
        "specversion": "2.0",
        "type": "identity_verification_capture_completed",
        "subject": "idv_5hxpdwegjcbujpth3wdo55d3vm",
        "id": "evnt_5hxpdwegjcbujpth3wdo55d3vm",
        "time": "2023-03-22T17:31:00Z",
        "datacontenttype": "application/json",
        "data": {
            "applicant_id": "aplt_5hxpdwegjcbujpth3wdo55d3vm",
            "user_journey_id": "usj_5hxpdwegjcbujpth3wdo55d3vm",
            "identity_verification_id": "idv_5hxpdwegjcbujpth3wdo55d3vm",
            "status": "declined",
            "response_codes": [
                {"code": 61310, "summary": "document_front_not_captured"},
                {"code": 62102, "summary": "document_not_accepted"}
            ]
        }
    }
    ```

    Wait until you've received a webhook with the `status` field set to one of the following values before continuing to the next step:
    - `approved`
    - `declined`
    - `retry_required`

    ## Step 4: Retrieve detailed verification results

    To retrieve the detailed verification results, call the following endpoint with the identity verification id value returned in the Request an identity verification response. 

    ### Response example

    ```json
    {
      "id": "idv_tkoi5db4hryu5cei5vwoabr7we",
      "created_on": "2017-07-21T17:32:28Z",
      "modified_on": "2017-07-21T17:40:32Z",
      "user_journey_id": "usj_tkoi5db4hryu5cei5vwoabr7we",
      "applicant_id": "aplt_tkoi5db4hryu5cei5vwoabr7we",
      "status": "declined",
      "response_codes": [
        {
          "code": 61310,
          "summary": "document_front_not_captured"
        },
        {
          "code": 62102,
          "summary": "document_not_accepted"
        }
      ],
      "verified_identity": {
        "full_name": "David Vincent",
        "birth_date": "1934-10-02"
      },
      "declared_data": {
        "name": "David Vincent",
        "birth_date": "1934-10-02"
      },
      "documents": [
        {
          "full_name": "David Vincent",
          "birth_date": "1934-10-02",
          "document_type": "ID",
          "document_issuing_country": "US",
          "front_image_signed_url": "https://storage-b.env.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/tight_crops/FRA-I5-Front-bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921906596.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163228Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=87d8467ab92cbad7c00171af28e613d495f3ff441ce0ea59dd013d68abc50555"
        }
      ],
      "face": {
        "image_signed_url": "https://storage-b.env.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/live_face/bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921946714.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163223Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7d87fec4f11f0df949da7beade2519cf1a51ce70fe9cc1cf0470d73f5340e4"
      },
      "phone_number": {
        "country_code": "+1",
        "number": "2068133616"
      },
      "webhook_url": "https://my.api/events/",
      "redirect_url": "https://myweb.site?query-param=hello",
      "_links": {
        "self": {
          "href": "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
        },
        "applicant": {
          "href": "https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we"
        },
        "verification_url": {
          "href": "https://id.ubble.ai/4hryu5cei5/"
        }
      }
    }
    ```

    For more details, see our the [retrieve an identity verification endpoint](#tag/Identity-verifications/operation/retrieve_identity_verification). 

    # Manage verification redirection
    
    When you request an [identity verification](#section/Get-Started), youâ€™ll receive a `verification_url` in the response. Redirect your user to this URL so they can perform the verification.

    To ensure a smooth user experience, you can control how the redirection is handled.

    ## Customize the verification user experience

    Contact your Account Manager or support.idv@checkout.com to customize the verification user experience.

    You can <a href="https://www.ubble.ai/customise-your-ubble-experience/" target="_blank">customize</a> the following elements on the verification screen displayed to your users:
    - logo
    - colors
    - fonts
    - button radius
    - message prompt text

    ## Redirect to mobile for verification

    All desktop users are redirected to their mobile device to perform verification. This allows the verification to be performed in a more secure environment, and ensures that users are more likely to complete the verification journey.

    After a user has completed the verification on their mobile, we redirect them back to their desktop environment by providing them with a QR code or SMS link.

    For the SMS link, you can provide a `phone_number` value in your [identity verification request](#operation/create_identity_verification) to pre-fill the phone number associated with the redirection.

    ## Redirect using web redirection (Optional)

    For web redirection, we support the following environments and minimum browser versions:

    | Desktop      | Chrome | Firefox | Safari | Internet Explorer | Edge | Opera |
    |--------------|--------|---------|--------|-------------------|------|-------|
    | Min. Version | â‰¥ 53   | â‰¥ 52    | â‰¥ 11.1 | -                 | â‰¥ 16 | â‰¥ 58  |

    | Android      | Chrome for Android | Firefox for Android | Samsung Internet | IE Mobile |
    |--------------|--------------------|---------------------|------------------|-----------|
    | Min. Version | â‰¥ 73               | â‰¥ 66                | â‰¥ 6.2            | -         |

    | iOS          | Safari Mobile | Chrome | All other browsers |
    |--------------|---------------|--------|--------------------|
    | Min. Version | â‰¥ 11.0        | â‰¥ 14.3 | -                  |

    After you create an identity verification in your backend, you can integrate it within your website by passing the `verificationUrl` to your web app and adding it as a link:

    ```html
    <a href="`${verificationUrl}`"></a>
    ```

    <div style="padding: 0px 0px 14px 14px ; background-color: #cfe5ff; border-color: #f8c92e; display: flex; align-items: center; border-radius: 0.5rem;">
      <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; vertical-align: center;">â“˜</div>
      <div style="display: table-cell; vertical-align: center;">
        <p>You can view an <a href="https://github.com/ubbleai/integration_examples/tree/master/web" target="_blank">example web integration</a> on our Identity Verification GitHub repository.</p>
      </div>
    </div>

    ### Handle user return in web redirection

    When the user completes or terminates their verification, theyâ€™ll be redirected to the `redirect_url` you specified when you requested an identity verification.

    The event associated with the userâ€™s verification is returned in the webhook notification, and as a URL parameter in the `redirect_url`. If verification was unsuccessful, the URL will also contain a `response_code` URL parameter. For example:

    ```
    https://your-redirect-url.com?id=idv_01h2623ysfkhpn7czed0bw8fd6&event=identity_verification_capture_aborted&response_code=61101
    ```

    Your follow-up action is determined by the [webhook event](#section/Webhooks/Events) you receive:

    <table style="width: 100%">
      <tbody>
        <tr>
          <th style="width: 40%" scope="col">Webhook event</th>
          <th style="width: 60%" scope="col">Follow-up action</th>
        </tr>
        <tr>
          <td style="width: 40%">
            <p>
              <code>identity_verification_capture_aborted</code> or
              <code>identity_verification_link_expired</code>
            </p>
          </td>
          <td style="width: 60%">
            <p>
              Request a
              <a
                href="#operation/retry_identity_verification"
                target="_self"
                >retry</a
              >.
            </p>
          </td>
        </tr>
        <tr>
          <td style="width: 40%">
            <p><code>identity_verification_capture_refused</code></p>
          </td>
          <td style="width: 60%">
            <p>Propose an alternative verification method to the user.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 40%">
            <p><code>identity_verification_capture_completed </code></p>
          </td>
          <td style="width: 60%">
            <p>
              You can ask users to perform additional checks or ask them to wait
              until results are available. In some instances, you may also
              simultaneously receive an
              <code>identity_verification_checks_completed</code> webhook.
            </p>
            <p>
              You can make your decision once you receive the
              <code>identity_verification_checks_completed</code> webhook.
            </p>
          </td>
        </tr>
      </tbody>
    </table>


    ## Redirect using webview (Optional)

    For a more integrated redirection from your mobile application, you can redirect the user with a webview. Webview redirection is supported by the following platforms:
    - Android
    - iOS 13 or later â€“ via WebRTC running inside a <a href="https://developer.apple.com/documentation/webkit/wkwebview" target="_blank">WKWebView</a>
    - iOS 12 or older â€“ via the Safari browser by passing the `verificationUrl` to the `UIApplication.open()`
    <a href="https://developer.apple.com/documentation/uikit/uiapplication/1648685-open" target="_blank">method</a> in your app code
    - React Native
    - Flutter â€“ using the `flutter_inappwebview` <a href="https://inappwebview.dev/docs/intro/" target="_blank">dependency</a>,
    with the <a href="https://inappwebview.dev/docs/web-rtc/" target="_blank">WebRTC API</a> so Identity Verification can launch a video stream

    <div style="padding: 0px 0px 14px 14px ; background-color: #cfe5ff; border-color: #f8c92e; display: flex; align-items: center; border-radius: 0.5rem;">
      <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; vertical-align: center;">â“˜</div>
      <div style="display: table-cell; vertical-align: center;">
        <p>You can view <a href="https://github.com/ubbleai/integration_examples/tree/master" target="_blank">example webview integrations</a> for each platform on our Identity Verification GitHub repository.</p>
      </div>
    </div>

    With a webview integration, youâ€™re expected to provide a deeplink to redirect the user on your mobile application.

    ### Handle user return in webview

    When the user completes or terminates their verification, theyâ€™ll be redirected to the `redirect_url` you specified when you requested an identity verification.

    The event associated with the userâ€™s verification is returned in the webhook notification, and as a URL parameter in the `redirect_url`. If verification was unsuccessful, the URL will also contain a `response_code` URL parameter. For example:

    ```
    https://your-redirect-url.com?id=idv_01h2623ysfkhpn7czed0bw8fd6&event=identity_verification_capture_aborted&response_code=61101
    ```

    Your follow-up action is determined by the [webhook event](#section/Webhooks/Events) you receive:

    <table style="width: 100%">
      <tbody>
        <tr>
          <th style="width: 40%" scope="col">Webhook event</th>
          <th style="width: 60%" scope="col">Follow-up action</th>
        </tr>
        <tr>
          <td style="width: 387.359px">
            <p><code>identity_verification_capture_aborted</code></p>
          </td>
          <td style="width: 491.641px">
            <p>
              Request a
              <a
                href="#operation/retry_identity_verification"
                >retry.
              </a>
            </p>
          </td>
        </tr>
        <tr>
          <td style="width: 40%">
            <p><code>identity_verification_capture_refused</code></p>
          </td>
          <td style="width: 60%">
            <p>Propose an alternative verification method to the user.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 40%">
            <p><code>identity_verification_capture_completed </code></p>
          </td>
          <td style="width: 60%">
            <p>
              You can ask users to perform additional checks, or ask them to wait
              until results are available. In some instances, you may also
              simultaneously receive an
              <code>identity_verification_checks_completed</code> webhook.
            </p>
            <p>
              You can make your decision once you receive the
              <code>identity_verification_checks_completed</code> webhook.
            </p>
          </td>
        </tr>
      </tbody>
    </table>




    ## Redirect using an iframe (Optional)

    If you use desktop to mobile redirection, we recommend using our iframe integration.

    Include the SDK as a script tag:

    ```html
    <script
      src="https://cdn.ubble.ai/iframe-sdk-1.0.0.js"
      type="application/javascript"
    ></script>
    ```

    Add a global method called `onUbbleReady` to the page. The method should be triggered when the SDK is loaded:

    ```js
    function onUbbleReady() {

    }
    ```

    Initialize a new `IDV` object:

    ```js
    function onUbbleReady() {
      const ubbleIDV = new Ubble.IDV(document.getElementById("ubble"), options);
    }
    ```

    ### API

    #### Events

    `onComplete(completeEvent)`: Triggered when a user completes the capture

    ```json
    {
      "event": "capture_completion",
      "redirectUrl": "https://your-redirect-url.com?id=<identity verification id>&event=identity_verification_capture_completed"
    }
    ```

    `onRefused(refusedEvent)`: Triggered when the applicant refuses to complete the verification

    ```json
    {
      "event": "capture_refusal",
      "responseCode": 63001,
      "redirectUrl": "https://your-redirect-url.com?id=<identity verification id>&event=identity_verification_capture_refused"
    }
    ```

    `onAbort(abortEvent)`: Triggered when the verification is terminated

    ```json
    {
      "event": "capture_abortion",
      "responseCode": 61111,
      "redirectUrl": "https://your-redirect-url.com?id=<identity verification id>&event=identity_verification_capture_aborted&response_code=63001"
    }
    ```

    `onExpired`: Triggered when the verification link has expired

    ```json
    {
      "event": "expiration",
      "redirectUrl": "https://your-redirect-url.com?id=<identity verification id>&event=identity_verification_link_expired&response_code=63001"
    }
    ```

    #### Methods

    `destroy()`: Ends the Identity Verification flow

    #### Full example

    ```js
    const ubbleIDV = new Ubble.IDV("idv", {
      width: "500",
      height: "600",
      allowCamera: true,
      verificationUrl: "https://idv.ubble.ai/4hryu5cei5",
      events: {
        onComplete(event) {
          ubbleIDV.destroy();
        },
        onAbort(event) {
          ubbleIDV.destroy();
        },
        onExpired(event) {
          ubbleIDV.destroy();
        }
        onRefused(event) {
          ubbleIDV.destroy();
        }
      },
    });
    ```

    <div style="padding: 0px 0px 14px 14px ; background-color: #fff6d9; border-color: #f8c92e; color: #666; display: flex; align-items: center; border-radius: 0.5rem;">
      <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; color: #f8c92e; vertical-align: center;">âš </div>
      <div style="display: table-cell; vertical-align: center;">
        <p>
        If you encounter issues, ensure that you've:
          <ul>
            <li>included a semicolon in the <code>Content-Security-Policy: frame-src https://*.domain_name.fr;</code> header</li>
            <li>allowed the use of the camera</li>
          </ul>
        </p>
      </div>
    </div>

    #### Handle user redirection in iframe

    When the user completes or terminates their verification, use the `destroy()` method for handling user redirection.

    # Handle verification results

    When you request an identity verification, you'll be notified about events throughout the verification's lifecycle via webhooks.
    
    ## Verification statuses

    The webhooks also return the current `status` of the identity verification. The follow-up action you should take depends on the `status` value returned:

    <table style="width: 100%">
      <tbody>
        <tr>
          <th style="width: 25%" scope="col">Status</th>
          <th style="width: 35%" scope="col">Description</th>
          <th style="width: 40%" scope="col">Recommended action</th>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>pending</code></p>
          </td>
          <td style="width: 35%">
            <p>The identity verification session is available</p>
          </td>
          <td style="width: 40%">
            <p>
              Redirect user to the web application using the
              <code>verificationUrl</code>.
            </p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>capture_in_progress</code></p>
          </td>
          <td style="width: 35%">
            <p>The user is performing the capture</p>
          </td>
          <td style="width: 40%">
            <p>Wait for a change in <code>status</code>.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>checks_in_progress</code></p>
          </td>
          <td style="width: 35%">
            <p>We're performing checks for the user's identity verification</p>
          </td>
          <td style="width: 40%">
            <p>Wait for a change in <code>status</code>.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>approved</code></p>
          </td>
          <td style="width: 35%">
            <p>The user's identity was verified successfully</p>
          </td>
          <td style="width: 40%">
            <p>Accept the user's request.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>declined</code></p>
          </td>
          <td style="width: 35%">
            <p>The user's identity was not verified due to an irregularity</p>
          </td>
          <td style="width: 40%">
            <p>
              Refuse the user's request. If necessary, create a new identity
              verification.
            </p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>retry_required</code></p>
          </td>
          <td style="width: 35%">
            <p>
              We could not perform all of the required checks for the user's
              identity verification
            </p>
          </td>
          <td style="width: 40%">
            <p>Request a retry.</p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>inconclusive</code></p>
          </td>
          <td style="width: 35%">
            <p>
              The identity verification checks were not completed and a retry is no
              longer available
            </p>
          </td>
          <td style="width: 40%">
            <p>None</p>
          </td>
        </tr>
        <tr>
          <td style="width: 25%">
            <p><code>refused</code></p>
          </td>
          <td style="width: 35%">
            <p>The user refused to perform the identity verification</p>
          </td>
          <td style="width: 40%">
            <p>
              Propose an alternative method of identity verification to the user.
            </p>
          </td>
        </tr>
      </tbody>
    </table>

    ## Response codes
    
    When the status is `retry_required`, `declined`, `refused` or `approved`, you will also get
    additional information in the webhook body with the `response_codes` attribute. It will
    include both a numeric code and a string, as detailed in the example below:

    ```json
    "response-codes": [
      {"code": 61310, "summary": "document_front_not_captured"},
      {"code": 62102, "summary": "document_not_accepted"},
    ]
    ```

    You will find below the exhaustive list of these codes.

    <div style="padding: 0px 0px 14px 14px ; background-color: #fff6d9; border-color: #f8c92e; color: #666; display: flex; align-items: center; border-radius: 0.5rem;">
      <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; color: #f8c92e; vertical-align: center;">âš </div>
      <div style="display: table-cell; vertical-align: center;">
        <p>
          Please note that we consider adding new response codes as backward compatible.
        </p>
      </div>
    </div>

    You should then build you business rules based on the status and use response codes as additional information, rather than use response codes as required information.

     ### List of response codes

    <style type="text/css">
    .tg  {border-collapse:collapse;border-color:#ccc;border-spacing:0}
    .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333;
      font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}
    .tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333;
      font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
    .tg .tg-dvid{background-color:#efefef;border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}
    .tg .tg-fymr{background-color:#f0f0f0;border-color:inherit;font-weight:bold;text-align:left;vertical-align:center;}
    .tg .tg-center{border-color:inherit;text-align:center;vertical-align:center}
    .tg .tg-y698{background-color:#c4c4c4;border-color:inherit;text-align:left;vertical-align:center}
    .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:center}
    .one {width: 10%}
    .two {width: 30%}
    .three {width: 30%}
    .four {width: 15%}
    .five {width: 15%}
    </style>

    ### Status: `approved`
    <table class="tg">
    <colgroup>
      <col class="one" />
      <col class="two" />
      <col class="three" />
      <col class="four" />
      <col class="five" />
    </colgroup>
    <thead>
      <tr>
        <th class="tg-fymr"><nobr><code>code</code></nobr></th>
        <th class="tg-fymr"><code>summary</code></th>
        <th class="tg-fymr">Description</th>
        <th class="tg-fymr">Checkout Identity Verification</th>
        <th class="tg-fymr">Video Certified</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="tg-0pky">10000</td>
        <td class="tg-0pky">approved</td>
        <td class="tg-0pky">Approved</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
    </tbody>
    </table>

    ### Status: `retry_required`
    <table class="tg">
    <colgroup>
      <col class="one" />
      <col class="two" />
      <col class="three" />
      <col class="four" />
      <col class="five" />
    </colgroup>
    <thead>
      <tr>
        <th class="tg-fymr"><nobr><code>code</code></nobr></th>
        <th class="tg-fymr"><code>summary</code></th>
        <th class="tg-fymr">Description</th>
        <th class="tg-fymr">Checkout Identity Verification</th>
        <th class="tg-fymr">Video Certified</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="tg-dvid" colspan="5">Applicant engagement issue</td>
      </tr>
      <tr>
        <td class="tg-0pky">61101</td>
        <td class="tg-0pky">applicant_never_started</td>
        <td class="tg-0pky">Applicant was probably not redirected to the application and never started the flow</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61111</td>
        <td class="tg-0pky">applicant_not_ready</td>
        <td class="tg-0pky">Applicant explicitly stated that they wanted to perform the identity verification later by clicking on the dedicated button</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>       
      </tr>
      <tr>
        <td class="tg-0pky">61112</td>
        <td class="tg-0pky">applicant_no_document</td>
        <td class="tg-0pky">Applicant explicitly stated that they did not have their document with them by clicking on the dedicated button</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61113</td>
        <td class="tg-0pky">camera_access_refused</td>
        <td class="tg-0pky">Applicant did not give access to the camera despite the dedicated instructions</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61121</td>
        <td class="tg-0pky">applicant_drop</td>
        <td class="tg-0pky">Applicant left the process before the capture phase and the verification URL expired (by default the expiration time is 15 minutes)</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-fymr" colspan="5"><span style="font-weight:bold">Technical issue</span></td>
      </tr>
      <tr>
        <td class="tg-0pky">61201</td>
        <td class="tg-0pky">connexion_insufficient</td>
        <td class="tg-0pky">Applicant did not have a sufficient connexion to perform the capture</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61202</td>
        <td class="tg-0pky">browser_not_supported</td>
        <td class="tg-0pky">Applicantâ€™s browser was not suitable for video streaming</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61203</td>
        <td class="tg-0pky">camera_not_found</td>
        <td class="tg-0pky">Applicantâ€™s device did not have any camera</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61204</td>
        <td class="tg-0pky">focus_lost</td>
        <td class="tg-0pky">Applicant switched tabs/application while performing the id verification</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61205</td>
        <td class="tg-0pky">sms_not_received</td>
        <td class="tg-0pky">Applicant did not receive the SMS</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-fymr" colspan="5"><span style="font-weight:bold">Document capture issue</span></td>
      </tr>
      <tr>
        <td class="tg-0pky">61301</td>
        <td class="tg-0pky">document_video_blurry</td>
        <td class="tg-0pky">Applicantâ€™s document video is too blurry<br>(mostly due to too much movement but if this error persists the camera quality might be at fault)</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61302</td>
        <td class="tg-0pky">document_video_lighting_issue</td>
        <td class="tg-0pky">Applicant performed the document capture under poor lighting conditions</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61310</td>
        <td class="tg-0pky">document_front_not_captured</td>
        <td class="tg-0pky">Applicant has not captured the front of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61311</td>
        <td class="tg-0pky">document_back_not_captured</td>
        <td class="tg-0pky">Applicant has not captured the back of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61312</td>
        <td class="tg-0pky">document_partially_hidden</td>
        <td class="tg-0pky">Applicant hides part of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61313</td>
        <td class="tg-0pky">document_not_tilted</td>
        <td class="tg-0pky">Applicant did not present a dynamic view of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61314</td>
        <td class="tg-0pky">document_challenge_timeout</td>
        <td class="tg-0pky">Applicant failed to meet the document challenge and the verification expired</td>
        <td class="tg-center">&#10060;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-fymr" colspan="5"><span style="font-weight:bold">Face capture issue</span></td>
      </tr>
      <tr>
        <td class="tg-0pky">61401</td>
        <td class="tg-0pky">face_video_blurry</td>
        <td class="tg-0pky">Applicantâ€™s video of their face is too blurry <br>(mostly due to too much movement but if this error persists the camera quality might be at fault)</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61402</td>
        <td class="tg-0pky">face_video_lighting_issue</td>
        <td class="tg-0pky">Applicant performed their identity verification under poor lighting conditions</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61410</td>
        <td class="tg-0pky">face_not_captured</td>
        <td class="tg-0pky">Applicant has not presented a face</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61411</td>
        <td class="tg-0pky">face_partially_hidden</td>
        <td class="tg-0pky">Applicant did not show the full front view of their face</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61412</td>
        <td class="tg-0pky">face_not_turned</td>
        <td class="tg-0pky">Applicant did not move to prove the liveness</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61413</td>
        <td class="tg-0pky">face_challenge_timeout</td>
        <td class="tg-0pky">Applicant failed to meet the face challenge and the verification expired</td>
        <td class="tg-center">&#10060;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61414</td>
        <td class="tg-0pky">various_faces_detected</td>
        <td class="tg-0pky">Applicant also captured another person face</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-fymr" colspan="5"><span style="font-weight:bold">Other issues</span></td>
      </tr>
      <tr>
        <td class="tg-0pky">61901</td>
        <td class="tg-0pky">internal_error</td>
        <td class="tg-0pky">An internal error prevents us from completing the verification, we do our best to reduce the occurrence of this case</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">61911</td>
        <td class="tg-0pky">corrupted_videos</td>
        <td class="tg-0pky">The received videos cannot be played</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
    </tbody>
    </table>

    ### Status: `declined`
    <table class="tg">
    <colgroup>
      <col class="one" />
      <col class="two" />
      <col class="three" />
      <col class="four" />
      <col class="five" />
    </colgroup>
    <thead>
      <tr>
        <th class="tg-fymr"><nobr><code>code</code></nobr></th>
        <th class="tg-fymr"><code>summary</code></th>
        <th class="tg-fymr">Description</th>
        <th class="tg-fymr">Checkout Identity Verification</th>
        <th class="tg-fymr">Video Certified</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="tg-dvid" colspan="5">Document issue</td>
      </tr>
      <tr>
        <td class="tg-0pky">62101</td>
        <td class="tg-0pky">document_expired</td>
        <td class="tg-0pky">Applicant presented an expired document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62102</td>
        <td class="tg-0pky">document_not_accepted</td>
        <td class="tg-0pky">Applicant presented a document which is not accepted</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62103</td>
        <td class="tg-0pky">document_damaged</td>
        <td class="tg-0pky">Applicant has submitted a damaged document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-dvid" colspan="5">Copy issue</td>
      </tr>
      <tr>
        <td class="tg-0pky">62201</td>
        <td class="tg-0pky">document_photocopy</td>
        <td class="tg-0pky">Applicant presented a photocopy of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62202</td>
        <td class="tg-0pky">document_screenshot</td>
        <td class="tg-0pky">Applicant presented the document on a screen</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-dvid" colspan="5">Identity fraud</td>
      </tr>

      <tr>
        <td class="tg-0pky">62301</td>
        <td class="tg-0pky">document_counterfeit</td>
        <td class="tg-0pky">Applicant has submitted a counterfeit or falsification</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62302</td>
        <td class="tg-0pky">document_stolen</td>
        <td class="tg-0pky">Applicant presented a document declared as stolen or lost</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62303</td>
        <td class="tg-0pky">document_swap</td>
        <td class="tg-0pky">Applicant presented the front and back of two different documents</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62304</td>
        <td class="tg-0pky">face_mismatch</td>
        <td class="tg-0pky">Applicant does not match the photograph of the document</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62305</td>
        <td class="tg-0pky">face_not_live</td>
        <td class="tg-0pky">Applicant has presented a photography or a video of someone else's face on a screen or on a physical medium</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62306</td>
        <td class="tg-0pky">face_alteration</td>
        <td class="tg-0pky">Applicant has altered their appearance</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62307</td>
        <td class="tg-0pky">videos_digital_alteration</td>
        <td class="tg-0pky">Applicant has digitally altered the videos</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#10060;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62399</td>
        <td class="tg-0pky">generic_fraud</td>
        <td class="tg-0pky">Generic code when a fraud has been detected within a certified identity verification</td>
        <td class="tg-center">&#10060;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
      <tr>
        <td class="tg-dvid" colspan="5">Suspicious behavior</td>
      </tr>
      <tr>
        <td class="tg-0pky">62401</td>
        <td class="tg-0pky">declared_identity_mismatch</td>
        <td class="tg-0pky">Applicantâ€™s identity does not match with the expected one</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62402</td>
        <td class="tg-0pky">suspicious_device</td>
        <td class="tg-0pky">Applicant used a device that has been technically altered</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
      <tr>
        <td class="tg-0pky">62403</td>
        <td class="tg-0pky">consent_unclear</td>
        <td class="tg-0pky">Applicant seems to have performed the capture against their will</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
    </tbody>
    </table>

    ### Status: `refused`
    <table class="tg">
    <colgroup>
      <col class="one" />
      <col class="two" />
      <col class="three" />
      <col class="four" />
      <col class="five" />
    </colgroup>
    <thead>
      <tr>
        <th class="tg-fymr"><nobr><code>code</code></nobr></th>
        <th class="tg-fymr"><code>summary</code></th>
        <th class="tg-fymr">Description</th>
        <th class="tg-fymr">Checkout Identity Verification</th>
        <th class="tg-fymr">Video Certified</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="tg-0pky">63001</td>
        <td class="tg-0pky">applicant_refusal</td>
        <td class="tg-0pky">Applicant explicitly refused to do the verification process by clicking on the dedicated button</td>
        <td class="tg-center">&#9989;</td>
        <td class="tg-center">&#9989;</td>
      </tr>
    </tbody>
    </table>

    ## Retrieve detailed verification results 

    To retrieve detailed results about an identity verification, call the following endpoint with
    the unique id returned in the [Create identity verification request](#tag/Identity-verifications/operation/create_identity_verification) response:

    <div style="padding: 1em; background-color: #fafafa; display: flex; align-items: center; border-radius: 0.5rem;">
      <span type="get" class="sc-EgOXT dzbTKB http-verb get">get</span>
      <span class="sc-ejfMa-d jgeKJH">/v2/identity-verifications/{identity_verification_id}</span>
    </div>

    ### Response example

    ```json
    {
      "id": "idv_tkoi5db4hryu5cei5vwoabr7we",
      "created_on": "2023-10-06T17:32:28Z",
      "modified_on": "2023-10-06T17:40:32Z",
      "user_journey_id": "usj_tkoi5db4hryu5cei5vwoabr7we",
      "status": "declined",
      "response_codes": [
        {
          "code": 61310,
          "summary": "document_front_not_captured"
        },
        {
          "code": 62102,
          "summary": "document_not_accepted"
        }
      ],
      "verified_identity": {
        "full_name": "David Vincent",
        "birth_date": "1990-12-20"
      },
      "declared_data": {
        "name": "David Vincent",
        "birth_date": "1990-12-20"
      },
      "documents": [{}],
      "face": {
        "image_signed_url": "https://storage-b.env.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/live_face/bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921946714.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20231006T174223Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7d87fec4f11f0df949da7beade2519cf1a51ce70fe9cc1cf0470d73f5340e4"
      },
      "phone_number": {
        "country_code": "+1",
        "number": "2068133616"
      },
      "webhook_url": "https://my.api/events/",
      "redirect_url": "https://myweb.site?query-param=hello",
      "_links": {
        "self": {
          "href": "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
        },
        "verification_url": {
          "href": "https://idv.ubble.ai/4hryu5cei5/"
        }
      }
    }
    ```

    ### Response attributes

    |Attribute|Description|
    |:----|:----|
    |`status`|Indicates the position in the lifecycle and the action to be taken.|
    |`response_codes`|Indicates the cause when the status is `refused`, `declined`, or `retry_required`.|
    |`verified_identity`|Includes all information about the identity of the user when the verification is approved.|
    |`documents`|Includes all information that has been extracted from the document, as well as the best images of the document.|
    |`face`|Includes the best image of the face.|

    To configure the information extracted from the document, reach out to your Account Manager or support.idv@checkout.com.

    For more details, see [retrieve identity-verification documentation](#tag/Identity-verifications/operation/retrieve_identity_verification).

    ## Retry management

    When the identity verification status is `retry_required`, you can request a retry. To do this, you'll need:
    - the identity_verification_id
    - a redirect URL

    <div style="padding: 1em; background-color: #fafafa; display: flex; align-items: center; border-radius: 0.5rem;">
      <span type="post" class="sc-EgOXT hniGzf http-verb post">post</span>
      <span class="sc-ejfMa-d jgeKJH">/v2/identity-verifications/{identity_verification_id}/retry</span>
    </div>

    Request example

    ```json
    {
      "phone_number": {
          "country_code": "+1",
          "number": "5555550102"
      },
      "redirect_url": "https://example.com?query-param=hello"
    }
    ```

    Response example
    ```json
    {
      "value": {
        "id": "idv_tkoi5db4hryu5cei5vwoabr7we",
        "created_on": "2017-07-21T17:32:28Z",
        "modified_on": "2017-07-21T17:40:32Z",
        "user_journey_id": "usj_tkoi5db4hryu5cei5vwoabr7we",
        "status": "pending",
        "response_codes": [],
        "declared_data": {
          "name": "David Vincent",
          "birth_date": "1934-10-02"
        },
        "documents": [],
        "redirect_url": "https://example.com?query-param=hello",
        "_links": {
          "self": {
            "href": "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
          },
          "verification_url": {
            "href": "https://idv.ubble.ai/4hryu5cei5/"
          }
        }
      }
    }
    ```

    For more details, see [retrieve identity-verification documentation](#tag/Identity-verifications/operation/retry_identity_verification).

    We recommend that you use the response codes to guide the user. For example, if the [response codes](#section/Handle-verification-results/Response-codes)
    indicate that the connection of the user is not sufficient, you should give this information to the user.

    <div style="padding: 0px 0px 14px 14px ; background-color: #fff6d9; border-color: #f8c92e; color: #666; display: flex; align-items: center; border-radius: 0.5rem;">
      <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; color: #f8c92e; vertical-align: center;">âš </div>
      <div style="display: table-cell; vertical-align: center;">
        <p>You can only request a retry if the <code>status</code> is <code>retry_required</code>.</p>
      </div>
    </div>

    ## Retrieve a PDF report

    When you receive an `identity_verification_checks_completed` webhook, we'll simultaneously generate a PDF report with detailed results of the identity verification.

    When the PDF report is ready for you to [retrieve via the API](#tag/Identity-verifications/operation/pdf_identity_verification),
    you'll receive an `identity_verification_report_created` webhook.

    ## API response signing

    The API response signature can be activated by your account manager.
    
    This signature can be used to verify that the API response has been issued by Checkout.com and has not been altered.

    #### Verifying Response signature

    The `Cko-Signature` header contains:
    - the timestamp of the request, for example, `1635236316.377888`
    - the signing key identifier and version, for example, `3456-live-v1`
    - the signature itself, for example, `5257a869a7ecebeda35affa62cdcb3fa51cad7e77a0e56ff546d0ae8e108d8bd`

    Format of response signature:
    ```
      <timestamp>:<organization_id>-<test or live verification>-<key version>:<signature>
    ```

    Response signature example:
    ```
      1635236316.377888:3456-production-v1:5257a869a7ecebeda35affa62cdcb3fa51cad7e77a0e56ff546d0ae8e108d8bd
    ```

    We use an asymmetric key signing algorithm of type ECDSA with a sha2-512 hashing algorithm to sign the API response. 

    On your side, you can verify the signature against the received body by using the public key associated with the signature key. There are two public keys, for test verifications and live verifications respectively. You can download them from the client dashboard. 

    The keys have a validity of one year and will be automatically renewed. Upon renewal you will have to re-download the public key from the dashboard. 

    To detect a key rotation, look at the signature version in the API response. To verify that response, use the public key with the same version of the signature key. 

    Donâ€™t worry about losing older versions of the public key, you can download all versions of the public key from the dashboard.
   
    #### Verifying Images
    You can also verify that the images has not been altered by using the image hashes available in the API response body.
    
    Images are hashed using the sha2-256 hashing algorithm and the same signature key than the one used to sign the API response.
    <div style="padding: 0px 0px 14px 14px ; background-color: #fff6d9; border-color: #f8c92e; color: #666; display: flex; align-items: center; border-radius: 0.5rem;">
    <div style="margin-right: 20px; margin-top: 14px; font-size: 30px; color: #f8c92e; vertical-align: center;">âš </div>
    <div style="display: table-cell; vertical-align: center;">
      <p>For the data to be valid, both verification stages must be valid : the response signature verification and the images verification.</p>
    </div>
    </div>

    ## Data management

    You can configure data retention together with your account manager, in accordance with your purpose for using the data. At the end of this time, the identity verifications are anonymized, which means all personal or sensitive data are deleted. The default storage time is 90 days.
  
    If needed, you can also request the anonymization of an identity verification through the [anonymization endpoint](#tag/Identity-verifications/operation/anonymize_identity_verification). 

    # Applicants

    ## Creation
    When you create an identity verification, an applicant is automatically created and the call returns an `applicant_id`.

    You can also directly create an applicant, using the [create endpoint](#tag/applicants/operation/create_applicant). In this case you will be able to define the `external_applicant_id`, that should correspond to the unique identifier of the applicant in your database, as well as the `mail` of the applicant.

    If the applicant is already created, you can also patch this information using the [update endpoint](#tag/applicants/operation/update_applicant).

    ## Applicant file 
    You can request several verifications for the same applicant. You only need to indicate the concerned `applicant_id` when creating the verification.

    If and only if an identity verification is `approved`, the verified identity is added to the `applicant` file. To find this information, use the [retrieve an applicant endpoint.](#tag/applicants/operation/retrieve_applicant).

    # Webhooks

    ## Configuration

    When [creating an identity verification](#tag/Identity-verifications/operation/create_identity_verification), you need to provide the webhook url you want to be notified on.

    You will be notified of each event on identity verifications. For more details see the event section.

    To help you integrate your webhook you can trigger it with the standard answers, see [notify endpoint](#tag/Identity-verifications/operation/notify_identity_verification).

    ## Body

    The webhook body contains the following information: 

    | Attribute                | Description                                                                             |
    |--------------------------|-----------------------------------------------------------------------------------------|
    | applicant_id             | ID of the applicant, useful to recognize them                                           |
    | external_applicant_id    | Your applicant ID, only if you updated it in the applicant object                       |
    | user_journey_id          | ID of the user journey                                                                  |
    | identity_verification_id | ID of the identity verification                                                         |
    | status                   | status of the identity verification                                                     |
    | response_codes           | list of response codes                                                                  |

    ### Example
    ```json
      {
          "specversion": "2.0",
          "type": "identity_verification_capture_completed",
          "subject": "idv_5hxpdwegjcbujpth3wdo55d3vm",
          "id": "evnt_5hxpdwegjcbujpth3wdo55d3vm",
          "time": "2023-03-22T17:31:00Z",
          "datacontenttype": "application/json",
          "data": {
              "applicant_id": "aplt_5hxpdwegjcbujpth3wdo55d3vm",
              "user_journey_id": "usj_5hxpdwegjcbujpth3wdo55d3vm",
              "identity_verification_id": "idv_5hxpdwegjcbujpth3wdo55d3vm",
              "status": "declined",
              "response_codes": [
                  {"code": 62301, "summary": "document_counterfeit"},
                  {"code": 62304, "summary": "face_mismatch"}
                  
              ]
          }
      }
    ```

    ## Events

    ![](https://raw.githubusercontent.com/ubbleai/docs/main/life_cycle_diagram.png)

    | <div style="width:12em">Events</div>                      | Description                                                                                                                       |
    |-----------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------|
    | `identity_verification_created`                           | You created an identity verification                                                                                              |
    | `identity_verification_started`                           | The applicant has been redirected to the web application                                                                          |
    | `identity_verification_capture_completed`                 | The applicant completed the capture                                                                                               |
    | `identity_verification_checks_completed`                  | We completed the checks                                                                                                           |
    | `identity_verification_link_expired`                      | The link expired without applicant being redirected to the web application, please note the default expiration time is 15 minutes |
    | `identity_verification_capture_refused`                   | The applicant explicitly refused to perform the verification                                                                      |
    | `identity_verification_capture_aborted`                   | The applicant terminated the capture without completing it                                                                        |
    | `identity_verification_checks_inconclusive`               | The applicant did not provide the assets required to perform the checks                                                           |
    | `identity_verification_retry_requested`                   | You requested a retry for this identity verification                                                                              |
    | `identity_verification_anonymized`                        | The verification has been anonymized and was in the status `retry_required`, retry is no longer available                         |
    | `identity_verification_audit_completed`                   | The verification has been audited and the status may have been updated                                                            |
    | `identity_verification_report_created`                    | The pdf report is available                                                                                                       |

    ## Retry

    We expect that you will return us a 200 or 201 status code within 10 seconds before we retry, up to 2 retries will be performed. If needed, you can trigger webhook notifications manually using the [notify endpoint](#tag/Identity-verifications/operation/notify_identity_verification).

    ## Signature
    For security reasons all our webhook calls are signed.
    
    `Cko-Signature` header contains the timestamp of the signature plus the signature itself. This allow you to ensure the content of the webhook was not modified.

    The header has the following format: "{timestamp}:{signature version}:{signature}" the format follows. Example: `1706285972.415666:1-test-v1:MIGGAkFt55yXjDDD0IFgVg+kH7++bJql/UfL8YcwOgaKvb0r/Zj/c/ULPKn7YUr3ddAi3PsCP2rPMnvEMBMGmPIB292nQgJBHR5H/Nk1BLWDvOf5VWjn+OmtU1J84m5NTvIxkkV9kcgyk1mUwUfAJGNoU5LhyYjBqwiU+CwkTVJa844qitcqhZg=`

    To compare the signature, you will need the webhook secret signature. There is one for signature for test verifications and one for live verifications. You can find them in the dashboard.

    ## Security

    ### Webhook IP whitelisting

    For security purposes, if you need to whitelist our incoming api calls, see our [public ip](https://docs.outscale.com/en/userguide/OUTSCALE-Public-IPs.html).

    # API standards

    This section describes the standards we use to ensure the consistency of our API. 
    
    ## Required tag
    ### required
    Attributes tagged as `required` **MUST** be present in requests and responses.

    ### null values
    Attributes not marked as `required` can be null. In that case the attribute is not sent in the response.

    ## Resources identifiers
    ### Format
    `{prefix}_{lower-case base-32 encoded GUID}`

    ### Resources identifiers formatting

    | resource name          | prefix  | example                         |
    |------------------------|---------|---------------------------------|
    | applicants             | aplt    | aplt_tkoi5db4hryu5cei5vwoabr7we |
    | identity-verifications | idv     | idv_tkoi5db4hryu5cei5vwoabr7we  |
    | user-journey           | usj     | usj_tkoi5db4hryu5cei5vwoabr7we  |

    ## Content type
    The API accepts and returns `application/json` type.

    ## Error handling
    For HTTP error codes 400 and 422 the response body will contain:
    - `error_type`: a short description code
    - `error_codes`: a list of more detailed codes
    
    Error codes and error types can be formatted as follows:
    - `{error}`
    - `{target/attribute}__{error}`
    - `{nested_object}__{object_attribute}__{error}`

    ```json
    {
      "error_type": "invalid_request",
      "error_codes": [
        "birth_date__invalid_format",
        "first_name__required",
        "phone_number__country_code__invalid"
      ]
    }
    ````

    ## Common Objects/Properties

    | name         | format                                                                                                                                              | example                                                                     |
    |--------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------|
    | countries    | - Apply ISO 3166-1 alpha-2                                                                                                                          | FR                                                                          |
    | date-time    | - Apply ISO8601<br /> - Always UTC time                                                                                                             | 2017-07-21T17:32:28Z                                                        |
    | phone number | - Country code with '+' sign (+33 for example) <br /> - Number with potential spaces, hyphens or trailing zero(s)  | {<br />    "country_code": "+44",<br />    "number": "1234 567890"<br /> }  |

  version: 2.0.0

servers:
  - url: https://api.ubble.ai/

tags:
  - name: identity verifications
    description: Identity verification endpoints documentation.
  - name: applicants
    description: Applicant management endpoints documentation.

x-tagGroups:
  - name: Endpoints documentation
    tags:
      - Identity verifications
      - Applicants
paths:
  /v2/create-and-start-idv:
    post:
      tags:
        - Identity verifications
      summary: Create an identity verification
      description: This endpoint allows you to create and identity verification. You should get a `201` response and the identity verification resource containing the `_links/verification_url`.
      operationId: create_identity_verification
      requestBody:
        required: true
        content:
          application/json:
            examples:
              Only required data:
                $ref: "#/components/examples/identity_verification_creation_request_body_min"
              All possible data:
                $ref: "#/components/examples/identity_verification_creation_request_body_max"
              Use an existing applicant:
                $ref: "#/components/examples/identity_verification_creation_request_body_min_plus_aplt"
            schema:
              $ref: "#/components/schemas/IdentityVerification"
      responses:
        "201":
          description: Identity verification created
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_creation_response_body"
              schema:
                required: [applicant_id, user_journey_id]
                allOf:
                  - $ref: "#/components/schemas/IdentityVerificationOutput"
      callbacks:
        statusChanged:
          "{$request.body#/webhook_url}":
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    example:
                      {
                        "specversion": "2.0",
                        "type": "identity_verification_capture_completed",
                        "subject": "idv_5hxpdwegjcbujpth3wdo55d3vm",
                        "id": "evnt_5hxpdwegjcbujpth3wdo55d3vm",
                        "time": "2023-03-22T17:31:00Z",
                        "datacontenttype": "application/json",
                        "data":
                          {
                            "applicant_id": "aplt_5hxpdwegjcbujpth3wdo55d3vm",
                            "user_journey_id": "usj_5hxpdwegjcbujpth3wdo55d3vm",
                            "identity_verification_id": "idv_5hxpdwegjcbujpth3wdo55d3vm",
                            "status": "declined",
                            "response_codes":
                              [
                                {
                                  "code": 61310,
                                  "summary": "document_front_not_captured",
                                },
                                {
                                  "code": 62102,
                                  "summary": "document_not_accepted",
                                },
                              ],
                          },
                      }
                    schema:
                      $ref: "#/components/schemas/Event"
              responses:
                "200":
                  description: Your server returns this code if it accepts the callback.
                "201":
                  description: Your server returns this code if it accepts the callback.

  /v2/identity-verifications/{identity_verification_id}/retry:
    post:
      tags:
        - Identity verifications
      summary: Retry an identity verification
      description: |
        This endpoint allows you to retry an identity verification with the `retry_required` status.

        If the verification status is not `retry_required`, this endpoint will return an error.

        You will need to provide the ID of the failed verification in the URL.

        You should get a `200` response and the identity verification resource containing the new `_links/verification_url`

      operationId: retry_identity_verification
      requestBody:
        content:
          application/json:
            examples:
              Empty body accepted:
                $ref: "#/components/examples/identity_verification_retry_request_body_min"
              All possible data:
                $ref: "#/components/examples/identity_verification_retry_request_body_max"
            schema:
              $ref: "#/components/schemas/IdentityVerificationRetryRequest"

      responses:
        "200":
          description: The verification has been retried successfully
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_creation_response_body"
              schema:
                required: [applicant_id, user_journey_id]
                allOf:
                  - $ref: "#/components/schemas/IdentityVerificationOutput"
        "400":
          description: The provided ID is not valid
        "404":
          description: The provided ID does not correspond to a failed verification
        "409":
          description: The verification has already succeeded
        "500":
          description: An error occurred while retrying the verification

  /v2/identity-verifications/{identity_verification_id}:
    get:
      tags:
        - Identity verifications
      summary: Retrieve an identity verification
      description: This endpoint allows you to get the detailed results of an identity verification.
      operationId: retrieve_identity_verification
      parameters:
        - name: identity_verification_id
          required: true
          in: path
          description: ID of the identity verification
          schema:
            $ref: "#/components/schemas/IdentityVerificationId"
      responses:
        "200":
          description: Identity verification retrieved
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_response_body"
              schema:
                required: [applicant_id, user_journey_id]
                allOf:
                  - $ref: "#/components/schemas/IdentityVerificationOutput"

  /v2/identity-verifications/{identity_verification_id}/anonymize:
    post:
      tags:
        - Identity verifications
      summary: Anonymize an identity verification
      description: Anonymize the personal data of an identity verification with the specified ID.
      operationId: anonymize_identity_verification
      parameters:
        - name: identity_verification_id
          in: path
          description: ID of the identity verification to anonymize
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Identity verification anonymization requested
          content:
            application/json:
              example:
                id: idv_tkoi5db4hryu5cei5vwoabr7we
                _links:
                  self:
                    href: https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we
              schema:
                required: [applicant_id, user_journey_id]
                allOf:
                  - $ref: "#/components/schemas/IdentityVerificationOutput"
        "404":
          description: Identity verification not found
        "400":
          description: Bad request. The identity verification cannot be anonymized.
        "500":
          description: Internal server error
      
  /v2/identity-verifications/{identity_verification_id}/pdf-report:
    get:
      tags:
        - Identity verifications
      summary: Retrieve PDF report of an identity verification
      description: |
        This endpoint allows you to retrieve a PDF report containing all the information of the identity verification.

        Please note that this report is only available for verifications in statuses `declined` and `approved` once you receive the `identity_verification_report_created` event.
        

      operationId: pdf_identity_verification
      parameters:
        - name: identity_verification_id
          in: path
          description: ID of the identity verification
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operation success
          content:
            application/json:
              examples:
                identity_verification_creation_response_body:
                  $ref: "#/components/examples/identity_verification_pdf_response_body"
              schema:
                required: [pdf_report]
                allOf:
                  - $ref: "#/components/schemas/IdentityVerificationPdf"
        "404":
          description: The PDF is not available

  /v2/identity-verifications/{identity_verification_id}/notify:
    post:
      tags:
        - Identity verifications
      summary: Request webhook notification
      operationId: notify_identity_verification
      description: This endpoint can be used to initiate a webhook call containing the latest event of an identity verification.
      parameters:
        - name: identity_verification_id
          in: path
          description: ID of the identity verification to notify
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook_url:
                  type: string
                  format: uri
      responses:
        "204":
          description: Notification succesfully requested

  /v2/applicants:
    post:
      tags:
        - Applicants
      summary: Create an Applicant
      description: This section describes all endpoints related to applicants. It will enable you to create and manage applicant objects.
      operationId: create_applicant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicant"
            examples:
              All possible data:
                $ref: "#/components/examples/applicant_creation_request_body"

      responses:
        "201":
          description: Applicant successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body"
          links:
            RetrieveApplicantById:
              operationId: retrieve_applicant
              parameters:
                applicant_id: "$response.body#/id"
        "400":
          description: Bad request
          content:
            application/json:
              examples:
                Invalid phone number:
                  value:
                    {
                      "error_type": "request_invalid",
                      "error_codes": ["phone_number__invalid_format"],
                    }

  /v2/applicants/{applicant_id}:
    get:
      tags:
        - Applicants
      summary: Retrieve an Applicant
      description: Retrieve an Applicant
      operationId: retrieve_applicant
      parameters:
        - name: applicant_id
          required: true
          in: path
          description: ID of Applicant to return
          schema:
            $ref: "#/components/schemas/ApplicantId"
      responses:
        "200":
          description: applicant retrieved succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body"
        "404":
          description: "Applicant not found"

    patch:
      tags:
        - Applicants
      summary: Update an Applicant
      description: Update an Applicant
      operationId: update_applicant
      parameters:
        - name: applicant_id
          required: true
          in: path
          description: ID of Applicant to return
          schema:
            $ref: "#/components/schemas/ApplicantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicant"
            examples:
              All possible data:
                $ref: "#/components/examples/applicant_creation_request_body"
      responses:
        "200":
          description: applicant updated succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body"
        "404":
          description: Applicant not found
        "400":
          description: Bad request. One or more input parameters are invalid
        "500":
          description: Internal server error

  /v2/applicants/{applicant_id}/anonymize:
    post:
      tags:
        - Applicants
      summary: Anonymize an Applicant
      description: Anonymize the personal data of an applicant with the specified ID.
      operationId: anonymize_applicant
      parameters:
        - name: applicant_id
          in: path
          description: ID of the applicant to anonymize
          required: true
          schema:
            type: string
      responses:
        "200":
          description: applicant anonymized succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicant"
              examples:
                Always replies:
                  $ref: "#/components/examples/applicant_response_body_anonymized"
        "404":
          description: Identity verification not found
        "400":
          description: Bad request. The applicant cannot be anonymized.
        "500":
          description: Internal server error

components:
  examples:
    identity_verification_creation_request_body_min:
      value:
        declared_data:
          name: David Vincent
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_creation_request_body_min_plus_aplt:
      value:
        applicant_id: aplt_tkoi5db4hryu5cei5vwoabr7we
        declared_data:
          name: David Vincent
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_creation_request_body_max:
      value:
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        applicant_id: aplt_tkoi5db4hryu5cei5vwoabr7we
        declared_data:
          name: David Vincent
          birth_date: 1934-10-02
        phone_number:
          country_code: "+1"
          number: "2068133616"
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_retry_request_body_min:
      value: {}

    identity_verification_retry_request_body_max:
      value:
        phone_number:
          country_code: "+1"
          number: "2068133616"
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello

    identity_verification_response_body:
      value:
        id: idv_tkoi5db4hryu5cei5vwoabr7we
        created_on: 2017-07-21T17:32:28Z
        modified_on: 2017-07-21T17:40:32Z
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        applicant_id: aplt_tkoi5db4hryu5cei5vwoabr7we
        status: declined
        response_codes:
          - { "code": 61310, "summary": "document_front_not_captured" }
          - { "code": 62102, "summary": "document_not_accepted" }
        verified_identity:
          full_name: David Vincent
          birth_date: 1934-10-02
        declared_data:
          name: David Vincent
          birth_date: 1934-10-02
        documents:
          - full_name: David Vincent
            birth_date: 1934-10-02
            document_type: ID
            document_issuing_country: US
            front_image_signed_url: https://storage-b.env.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/tight_crops/FRA-I5-Front-bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921906596.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163228Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=87d8467ab92cbad7c00171af28e613d495f3ff441ce0ea59dd013d68abc50555
        face:
          image_signed_url: https://storage-b.env.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/live_face/bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921946714.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163223Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7d87fec4f11f0df949da7beade2519cf1a51ce70fe9cc1cf0470d73f5340e4
        phone_number:
          country_code: "+1"
          number: "2068133616"
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello
        _links:
          self:
            href: "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
          applicant:
            href: "https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we"
          verification_url:
            href: "https://id.ubble.ai/4hryu5cei5/"

    identity_verification_creation_response_body:
      value:
        id: idv_tkoi5db4hryu5cei5vwoabr7we
        created_on: 2017-07-21T17:32:28Z
        modified_on: 2017-07-21T17:40:32Z
        user_journey_id: usj_tkoi5db4hryu5cei5vwoabr7we
        applicant_id: aplt_tkoi5db4hryu5cei5vwoabr7we
        status: pending
        response_codes: []
        declared_data:
          name: David Vincent
          birth_date: 1934-10-02
        documents: []
        webhook_url: https://my.api/events/
        redirect_url: https://myweb.site?query-param=hello
        _links:
          self:
            href: "https://api.ubble.ai/v2/identity-verifications/idv_tkoi5db4hryu5cei5vwoabr7we"
          applicant:
            href: "https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we"
          verification_url:
            href: "https://id.ubble.ai/4hryu5cei5/"

    identity_verification_pdf_response_body:
      value:
        pdf_report: www.pdf.com
            
    applicant_creation_request_body:
      value:
        external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
        email: david.vincent@courriel.ml

    applicant_response_body:
      value:
        id: aplt_tkoi5db4hryu5cei5vwoabr7we
        created_on: 2017-07-21T17:32:28Z
        modified_on: 2017-07-21T17:40:32Z
        external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
        email: david.vincent@courriel.ml
        _links:
          self:
            href: https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we

    applicant_response_body_anonymized:
      value:
        id: aplt_tkoi5db4hryu5cei5vwoabr7we
        created_on: 2017-07-21T17:32:28Z
        modified_on: 2017-07-21T17:40:32Z
        external_applicant_id: ext_osdfdfdb4hryu5cei5vwoabrk5k
        _links:
          self:
            href: https://api.ubble.ai/v2/applicants/aplt_tkoi5db4hryu5cei5vwoabr7we
    address_example_american:
      value:
        address_line1: 4022 Laguna St
        address_line2: Flat 456
        city: Santa Barbara
        zip: 93101
        country: US

  schemas:
    IdentityVerification:
      type: object
      required: [id]
      properties:
        id:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/IdentityVerificationId"
      allOf:
        - $ref: "#/components/schemas/DatedObject"
        - $ref: "#/components/schemas/IdentityVerificationBase"
          
    IdentityVerificationOutput:
      type: object
      required: [id]
      properties:
        id:
          $ref: "#/components/schemas/IdentityVerificationId"
      allOf:
        - $ref: "#/components/schemas/DatedObject"
        - $ref: "#/components/schemas/IdentityVerificationCreateBase"

    IdentityVerificationBase:
      type: object
      required:
        [declared_data, status, webhook_url, redirect_url, _links]
      properties:
        user_journey_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/UserJourneyId"
        applicant_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/ApplicantId"
        status:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/VerificationStatuses"
        response_codes:
          type: array
          readOnly: true
          minItems: 0
          items:
            $ref: "#/components/schemas/ResponseCodes"
        verified_identity:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/Identity"
        declared_data:
          $ref: "#/components/schemas/DeclaredData"
        documents:
          type: array
          readOnly: true
          minItems: 0
          maxItems: 2
          items:
            $ref: "#/components/schemas/Document"
        face:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/Face"
        phone_number:
          $ref: "#/components/schemas/PhoneNumber"
        webhook_url:
          type: string
          format: uri
        redirect_url:
          type: string
          format: uri
        _links:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/IdentityVerificationLinks"

    IdentityVerificationCreateBase:
      type: object
      required:
        [declared_data, status, webhook_url, redirect_url, _links, verification_policy_version]
      properties:
        user_journey_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/UserJourneyId"
        applicant_id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/ApplicantId"
        status:
          $ref: "#/components/schemas/VerificationStatuses"
        declared_data:
          $ref: "#/components/schemas/DeclaredData"
        documents:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/Document"
        face:
          allOf:
            - $ref: '#/components/schemas/VerificationFace'
          readOnly: true
        response_codes:
          type: array
          items:
            $ref: '#/components/schemas/ResponseCodes'
          readOnly: true
        verified_identity:
          allOf:
            - $ref: '#/components/schemas/VerificationIdentity'
          readOnly: true
        phone_number:
          $ref: "#/components/schemas/PhoneNumber"
        webhook_url:
          type: string
          format: uri
        redirect_url:
          type: string
          format: uri
        verification_policy_version:
          type: string
          description: returned ONLY for certified verifications
        _links:
          $ref: "#/components/schemas/IdentityVerificationLinks"

    IdentityVerificationLinks:
      type: object
      allOf:
        - $ref: "#/components/schemas/SelfLink"
        - $ref: "#/components/schemas/ApplicantLink"
        - $ref: "#/components/schemas/ActiveLink"

    IdentityVerificationPdf:
        type: object
        properties:
          pdf_report:
            type: string
            format: uri

    DeclaredData:
      type: object
      required: [name]
      properties:
        name:
          type: string
          maxLength: 255
        birth_date:
          type: string
          format: date

    Document:
      type: object
      required: [document_type, document_issuing_country, front_image_signed_url]
      readOnly: true
      allOf:
        - $ref: "#/components/schemas/Identity"
        - properties:
            personal_number:
              type: string
              maxLength: 255
            tax_identification_number:
              type: string
              maxLength: 255
            document_type:
              $ref: "#/components/schemas/DocumentTypes"
            document_issuing_country:
              $ref: "#/components/schemas/CountryCode"
            document_number:
              type: string
              maxLength: 255
            document_expiry_date:
              type: string
              format: date
            document_issue_date:
              type: string
              format: date
            document_issue_place:
              type: string
              maxLength: 255
            document_mrz:
              type: string
              pattern: ^([A-Z0-9<]{2}[A-Z0-9<]{1,38}[\n\r])+([A-Z0-9<]{2}[A-Z0-9<]{1,44}[\n\r])?([A-Z0-9<]{2}[A-Z0-9<]{1,44}[\n\r])?$
            front_image_signed_url:
              $ref: "#/components/schemas/PreSignedUrl"
            back_image_signed_url:
              $ref: "#/components/schemas/PreSignedUrl"
            signature_image_signed_url:
              $ref: "#/components/schemas/PreSignedUrl"

    Identity:
      type: object
      required: [full_name, birth_date]
      readOnly: true
      properties:
        full_name:
          type: string
          minLength: 2
          maxLength: 510
          readOnly: true
        first_names:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
        last_name:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
        last_name_at_birth:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
        birth_date:
          type: string
          format: date
          readOnly: true
        birth_place:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
        nationality:
          $ref: "#/components/schemas/CountryCode"
        gender:
          $ref: "#/components/schemas/Gender"

    Face:
      type: object
      required: [image_signed_url]
      readOnly: true
      properties:
        image_signed_url:
          $ref: "#/components/schemas/PreSignedUrl"

    Pdf:
      type: object
      required: [signed_url]
      readOnly: true
      properties:
        signed_url:
          $ref: "#/components/schemas/PreSignedUrl"

    IdentityVerificationRetryRequest:
      type: object
      properties:
        phone_number:
          $ref: "#/components/schemas/PhoneNumber"
        webhook_url:
          type: string
          format: uri
        redirect_url:
          type: string
          format: uri

    Event:
      type: object
      required: [specversion, type, subject, id, time, datacontenttype, data]
      properties:
        specversion:
          type: string
          description: The version of the CloudEvents specification.
          example: "2.0"
        type:
          type: string
          description: The type of the CloudEvent.
          example: "identity_verification_capture_completed"
        subject:
          type: string
          description: The identifier of the subject of the event.
          example: "idv_5hxpdwegjcbujpth3wdo55d3vm"
        id:
          type: string
          description: The identifier of the event.
          example: "evnt_5hxpdwegjcbujpth3wdo55d3vm"
        time:
          type: string
          format: date-time
          description: The time when the event occurred.
          example: "2023-03-22T17:31:00Z"
        datacontenttype:
          type: string
          description: The content type of the data attribute.
          example: "application/json"
        data:
          type: object
          description: The event payload.
          example:
            {
              "applicant_id": "aplt_5hxpdwegjcbujpth3wdo55d3vm",
              "user_journey_id": "usj_5hxpdwegjcbujpth3wdo55d3vm",
              "identity_verification_id": "idv_5hxpdwegjcbujpth3wdo55d3vm",
              "status": "declined",
              "response_codes":
                [
                  { "code": 61310, "summary": "document_front_not_captured" },
                  { "code": 62102, "summary": "document_not_accepted" },
                ],
            }
    ApplicantLink:
      type: object
      required: [applicant]
      properties:
        applicant:
          $ref: "#/components/schemas/HalLink"

    ActiveLink:
      type: object
      required: [verification_url]
      properties:
        verification_url:
          $ref: "#/components/schemas/HalLink"

    ApplicantRelation:
      type: object
      properties:
        id:
          readOnly: false
          allOf:
            - $ref: "#/components/schemas/ApplicantId"

    Applicant:
      required: [id]
      properties:
        id:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/ApplicantId"
      allOf:
        - $ref: "#/components/schemas/DatedObject"
        - $ref: "#/components/schemas/BaseApplicant"
        - $ref: "#/components/schemas/ApplicantsLinks"

    BaseApplicant:
      type: object
      properties:
        external_applicant_id:
          type: string
          example: "ext_osdfdfdb4hryu5cei5vwoabrk5k"
        email:
          type: string
          format: email
          example: david.vincent@courriel.ml

    ApplicantsLinks:
      type: object
      required: [_links]
      properties:
        _links:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/SelfLink"

    Attempt:
      type: object
      properties:
        state:
          $ref: "#/components/schemas/AttemptStates"
        link:
          type: string
          format: uri
          example: https://id.ubble.ai/4hryu5cei5/

    DocumentTypes:
      type: string
      description: Type of document.
      enum:
        - Driving license
        - ID
        - Passport
        - Residence Permit

    VerificationStatuses:
      type: string
      description: Status of the identity verification.
      readOnly: true
      enum:
        - pending
        - capture_in_progress
        - checks_in_progress
        - approved
        - declined
        - retry_required
        - refused

    AttemptStates:
      type: string
      description: States of an attempt.
      enum:
        - pending_redirection
        - capture_in_progress
        - checks_in_progress
        - completed
        - expired
        - capture_aborted
        - capture_refused
        - checks_aborted

    ResponseCodes:
      type: object
      description: The code giving more details about the result.
      readOnly: true
      properties:
        response_code:
          $ref: "#/components/schemas/ResponseCode"
        response_summary:
          $ref: "#/components/schemas/ResponseSummary"

    ResponseSummary:
      type: string
      description: A descriptive code of the response code.
      readOnly: true

    ResponseCode:
      type: integer
      description: The numeric code of the response code.
      readOnly: true
      minimum: 10000
      maximum: 69999

    ApplicantId:
      type: string
      description: Applicant unique identifier.
      pattern: ^aplt_\w+$
      example: aplt_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    IdentityVerificationId:
      type: string
      description: Identity verification unique identifier.
      pattern: ^idv_\w+$
      example: idv_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    UserJourneyId:
      type: string
      description: User journey unique identifier.
      pattern: ^usj_\w+$
      example: usj_tkoi5db4hryu5cei5vwoabr7we
      readOnly: true

    Address:
      type: object
      description: Postal address.
      required: [address_line1, city, zip, country]
      properties:
        address_line1:
          type: string
          minLength: 1
          maxLength: 100
          example: 4022 Laguna St
        address_line2:
          type: string
          minLength: 1
          maxLength: 100
          example: Flat 456
        city:
          type: string
          minLength: 1
          maxLength: 100
          example: Santa Barbara
        zip:
          type: string
          minLength: 2
          maxLength: 20
          example: 93101
        country:
          $ref: "#/components/schemas/CountryCode"

    CountryCode:
      type: string
      format: ISO 3166-1 alpha-2
      pattern: ^[A-Za-z]{2}$
      example: US

    Gender:
      type: string
      description: Person gender.
      example: M
      enum:
        - M
        - F

    PhoneNumber:
      type: object
      required: [country_code, number]
      properties:
        country_code:
          $ref: "#/components/schemas/PhonePrefix"
        number:
          $ref: "#/components/schemas/DomesticPhoneNumber"

    PhonePrefix:
      type: string
      format: international phone prefix
      pattern: ^\+(\d+)$
      example: "+33"

    DomesticPhoneNumber:
      type: string
      format: domestic phone number
      pattern: ^\d{1,14}$
      example: "2068133616"

    SelfLink:
      type: object
      required: [self]
      readOnly: true
      properties:
        self:
          $ref: "#/components/schemas/HalLink"

    HalLink:
      type: object
      required: [href]
      properties:
        href:
          type: string
          format: uri

    PreSignedUrl:
      type: string
      format: uri
      description: Pre-signed URL
      example: https://storage-b.ubble.ai/ubble-ai/NDYOOVHGZPAQ/a54b3393-f02a-47c9-a9c5-2f6ee73560e1/bb603e2f-5de9-40f2-9631-8285a33c24c0/live_face/bb603e2f-5de9-40f2-9631-8285a33c24c0-1679921946714.png?response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=V9jgOdpOdeVSFTkA4ZsG%2F20230327%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230327T163223Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7d87fec4f11f0df949da7beade2519cf1a51ce70fe9cc1cf0470d73f5340e4

    DatedObject:
      type: object
      required: [created_on, modified_on]
      properties:
        created_on:
          description: UTC Date time when the resource was created
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
          readOnly: true
        modified_on:
          description: UTC Date time when the resource was modified
          type: string
          format: date-time
          example: 2017-07-21T17:40:32Z
          readOnly: true

    VerificationFace:
      type: object
      properties:
        image_signed_url:
          type: string
          nullable: true
          readOnly: true
      required:
        - image_signed_url

    VerificationIdentity:
      type: object
      description: IdentitySerializer for our main Identity model
      properties:
        first_names:
          type: string
          nullable: true
          readOnly: true
        full_name:
          type: string
          nullable: true
          readOnly: true
        last_name:
          type: string
          nullable: true
          readOnly: true
        last_name_at_birth:
          type: string
          nullable: true
          readOnly: true
        birth_date:
          type: string
          format: date
          nullable: true
        birth_place:
          type: string
          nullable: true
          maxLength: 255
        nationality:
          type: string
          readOnly: true
        gender:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/GenderA47Enum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - first_names
        - full_name
        - last_name
        - last_name_at_birth

    GenderA47Enum:
      enum:
        - M
        - F
        - NA
      type: string
      description: |-
        * `M` - M
        * `F` - F
        * `NA` - NA

    BlankEnum:
      enum:
        - ''

    NullEnum:
      enum:
        - null
